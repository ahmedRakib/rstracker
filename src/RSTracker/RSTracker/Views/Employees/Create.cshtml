@model RSTracker.Models.Employee

<ol class="breadcrumb">
    <li class="breadcrumb-item active">Create Employee</li>
</ol>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DesignationId, "Designation ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownList("DesignationId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeptId, "Department ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownList("DeptId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DeptId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DivisionId, "Division ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownList("DivisionId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DivisionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubUnitId, "Sub-Unit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownList("SubUnitId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubUnitId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary btn-large" />
                ||@Html.ActionLink("Back to List", "Index",null, new { @class = "btn btn-outline-primary" })
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
